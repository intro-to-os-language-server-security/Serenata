stages:
    - build
    - test
    - finalization

include:
    - template: Code-Quality.gitlab-ci.yml
    # Unfortunately for ultimate only. We may be able to apply for ultimate as open source project, but until then,
    # leave this commented.
    # - template: Dependency-Scanning.gitlab-ci.yml
    # - template: SAST.gitlab-ci.yml

# ----- Build stage
.build-setup-composer: &build-setup-composer
    script:
        - curl -sSL https://getcomposer.org/download/2.3.5/composer.phar --output composer.phar
        - echo "3b3b5a899c06a46aec280727bdf50aad14334f6bc40436ea76b07b650870d8f4  composer.phar" > checksums
        - sha256sum -c checksums
        - php composer.phar update --prefer-dist --optimize-autoloader --no-interaction --no-progress

.build-job-shared: &build-job-shared
    stage: build
    <<: *build-setup-composer
    cache:
        key: "$CI_JOB_NAME-composer-full"
        paths:
            - vendor/
    artifacts:
        expire_in: 1 hrs
        paths:
            - vendor/
    needs: []

build:php-8.0:
    image: php:8.0-cli-alpine
    <<: *build-job-shared

build:php-8.1:
    image: php:8.1-cli-alpine
    <<: *build-job-shared

# ----- Test stage
test:run-composer-require-checker:
    image: php:8.0-cli-alpine
    stage: test
    script:
        - curl -sSL https://github.com/maglnet/ComposerRequireChecker/releases/download/4.1.0/composer-require-checker.phar --output composer-require-checker.phar
        - echo "2a4c652de474e5dbbda1662ff82f207be7aa86b44912093cf5fb135345506e66  composer-require-checker.phar" > checksums
        - sha256sum -c checksums
        - php ./composer-require-checker.phar check ./composer.json

test:run-phpcs:
    image: php:8.1-cli-alpine
    stage: test
    script:
        - php vendor/bin/phpcs src tests --warning-severity=8 --report-junit=./phpcs-test-report.xml
    artifacts:
        expire_in: 1 hrs
        paths:
            - phpcs-test-report.xml
        reports:
            junit: phpcs-test-report.xml
    needs:
        - job: build:php-8.1
          artifacts: true

test:run-phpstan:
    image: php:8.1-cli-alpine
    stage: test
    script:
        - php -d memory_limit=2048M vendor/bin/phpstan analyse -c phpstan-ci.neon --no-interaction --no-progress --error-format junit > ./phpstan-report.xml
    cache:
        key: "$CI_JOB_NAME-cache"
        paths:
            - cache
    artifacts:
        when: always
        expire_in: 1 hrs
        paths:
            - phpstan-report.xml
        reports:
            junit: phpstan-report.xml
    needs:
        - job: build:php-8.1
          artifacts: true

.test-run-phpunit: &test-run-phpunit
    script:
        - php -d memory_limit=512M vendor/bin/phpunit

.test-job-shared: &test-job-shared
    stage: test
    <<: *test-run-phpunit

test:php-8.0:
    image: php:8.0-cli-alpine
    <<: *test-job-shared
    needs:
        - job: build:php-8.0
          artifacts: true

test:php-8.1:
    image: php:8.1-cli-alpine
    <<: *test-job-shared
    needs:
        - job: build:php-8.1
          artifacts: true

# ----- Finalization stage, which contains finishing steps such as metrics and packaging.
.finalization-package-job-shared: &finalization-package-job-shared
    stage: finalization
    script:
        - curl -sSL https://getcomposer.org/download/2.3.5/composer.phar --output composer
        - echo "3b3b5a899c06a46aec280727bdf50aad14334f6bc40436ea76b07b650870d8f4  composer" > checksums

        - curl -sSL https://github.com/box-project/box/releases/download/3.16.0/box.phar --output box
        - echo "f508e28f309d7e95a319bdcd5f13dcfbb18eb91cb7a6cac9b69bc7799d78bdf9  box" >> checksums

        - sha256sum -c checksums

        # Help Box to find Composer
        - export PATH="$PATH:$(realpath .)"

        # Although Box will not include dev dependencies, we don't install it right from the start
        - ./composer update --prefer-dist --optimize-autoloader --no-interaction --no-progress --no-dev
        - php -d phar.readonly=0 ./box compile
    cache:
        key: "$CI_JOB_NAME-composer-no-dev"
        paths:
            - vendor/
    artifacts:
        paths:
            - bin/distribution.phar
    needs: []

finalization:package-php-8.0:
    image: php:8.0-cli-alpine
    <<: *finalization-package-job-shared

finalization:package-php-8.1:
    image: php:8.1-cli-alpine
    <<: *finalization-package-job-shared

finalization:code-coverage:
    image: php:8.1-cli-alpine
    stage: finalization
    coverage: '/^\s*Lines:\s*\d+.\d+\%/'
    script:
        - phpdbg -d memory_limit=2048M -qrr vendor/bin/phpunit --coverage-text --colors=never --coverage-html=coverage
        # Gitlab CI only runs one thread and it's about 2 minutes slower to run paratest here for some reason.
        #- phpdbg -d memory_limit=2048M -qrr vendor/bin/paratest --passthru-php="'-d' 'memory_limit=2048M'" --coverage-text --colors --coverage-html=coverage
    artifacts:
        expire_in: 1 weeks
        paths:
            - coverage/
    needs:
        - job: build:php-8.1
          artifacts: true

# See also https://docs.gitlab.com/ee/user/project/code_intelligence.html. Does not support PHP at the moment (yet).
# finalization:code-navigation:
#     image: golang:1.14.0
#     stage: finalization
#     allow_failure: true
#     script:
#         - go get github.com/sourcegraph/lsif-go/cmd/lsif-go
#         - lsif-go
#     artifacts:
#         reports:
#             lsif: dump.lsif
