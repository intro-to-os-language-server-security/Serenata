<doctrine-mapping
    xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping
        https://raw.github.com/doctrine/doctrine2/master/doctrine-mapping.xsd"
>

    <entity name="Serenata\Indexing\Structures\Class_" change-tracking-policy="DEFERRED_EXPLICIT">
        <field name="isAnonymous"        type="boolean" nullable="false" />
        <field name="isAbstract"         type="boolean" nullable="false" />
        <field name="isFinal"            type="boolean" nullable="false" />
        <field name="isAnnotation"       type="boolean" nullable="false" />
        <field name="parentFqcn"         type="string"  nullable="true" />

        <!-- These can't be join tables as the associations may not disappear if the other end is removed, otherwise -->
        <!-- we'd need to traverse the entire class list to update items when a missing classlike is added. -->
        <field name="childFqcns"         type="array"   nullable="false" />
        <field name="interfaceFqcns"     type="array"   nullable="false" />
        <field name="traitFqcns"         type="array"   nullable="false" />

        <one-to-many field="traitAliases" target-entity="Serenata\Indexing\Structures\ClassTraitAlias" mapped-by="class">
            <!-- <cache>
                <usage>READ_ONLY</usage>
                <region>classTraitAliases</region>
            </cache> -->
        </one-to-many>

        <one-to-many field="traitPrecedences" target-entity="Serenata\Indexing\Structures\ClassTraitPrecedence" mapped-by="class">
            <!-- <cache>
                <usage>READ_ONLY</usage>
                <region>classTraitPrecedences</region>
            </cache> -->
        </one-to-many>
    </entity>

</doctrine-mapping>
